<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- Generated by Compare It! (c) Grig Software -->
<HTML>
<HEAD>
<TITLE>Var.java Diff Report</TITLE>
<style type="text/css">
<!--
body { font-family: Verdana,Arial,Helvetica; background-color: #FFFFFF; }
td   { border:0; font-family: Arial, Helvetica; font-size: xx-small;}
table { border:0; width:100%; color: #666666;}
thead  { background-color: #343434; color: #FFFFFF; font-family: Verdana, Arial, Helvetica; height: 30px; vertical-align: middle; text-align: center; font-weight: bold; }
.Same { width:48%; }
.SrcOnly { background-color: #C0DCC0; color:#008000; width:48%; }
.DstOnly { background-color: #C0DCC0; color:#C80000; width:48%; }
.Virtual { background-color: #EEEEEE; width:48%; }
.Changed { background-color: #C0DCC0; color:#0000FF; width:48%; }
.InSame{ color:#0000FF; }
.InDiff { color:#C80000; font-weight:bold; }
.LineNum { background-color: #EEEEEE; width:2%; }
.Stats { background-color: #EEEEEE; color:black; }
.StatsA { background-color: #EEEEEE; color:black; }
a { font-family: Arial, Helvetica; font-size: xx-small;background-color: #EEEEEE; color:blue;}
-->
</STYLE>
</HEAD>
<BODY>
<table><tr><td align=right>Tuesday, May 17, 2011 10:17:41</td></tr></table>
<table>
<thead><tr><td width=50%>[NEW] alice/tuprolog/Var.java</td><td width=50%>[OLD] alice/tuprolog/Var.java</td></tr></thead></table>

<table cellspacing=1 cellpadding=0>
<tr><td class="LineNum">1</td><td class="Same">/*</td>
<td class="LineNum">1</td><td class="Same">/*</td></tr>
<tr><td class="LineNum">2</td><td class="Same">&nbsp;* tuProlog - Copyright (C) 2001-2002  aliCE team at deis.unibo.it</td>
<td class="LineNum">2</td><td class="Same">&nbsp;* tuProlog - Copyright (C) 2001-2002  aliCE team at deis.unibo.it</td></tr>
<tr><td class="LineNum">3</td><td class="Same">&nbsp;*</td>
<td class="LineNum">3</td><td class="Same">&nbsp;*</td></tr>
<tr><td class="LineNum">4</td><td class="Same">&nbsp;* This library is free software; you can redistribute it and/or</td>
<td class="LineNum">4</td><td class="Same">&nbsp;* This library is free software; you can redistribute it and/or</td></tr>
<tr><td class="LineNum">5</td><td class="Same">&nbsp;* modify it under the terms of the GNU Lesser General Public</td>
<td class="LineNum">5</td><td class="Same">&nbsp;* modify it under the terms of the GNU Lesser General Public</td></tr>
<tr><td class="LineNum">6</td><td class="Same">&nbsp;* License as published by the Free Software Foundation; either</td>
<td class="LineNum">6</td><td class="Same">&nbsp;* License as published by the Free Software Foundation; either</td></tr>
<tr><td class="LineNum">7</td><td class="Same">&nbsp;* version 2.1 of the License, or (at your option) any later version.</td>
<td class="LineNum">7</td><td class="Same">&nbsp;* version 2.1 of the License, or (at your option) any later version.</td></tr>
<tr><td class="LineNum">8</td><td class="Same">&nbsp;*</td>
<td class="LineNum">8</td><td class="Same">&nbsp;*</td></tr>
<tr><td class="LineNum">9</td><td class="Same">&nbsp;* This library is distributed in the hope that it will be useful,</td>
<td class="LineNum">9</td><td class="Same">&nbsp;* This library is distributed in the hope that it will be useful,</td></tr>
<tr><td class="LineNum">10</td><td class="Same">&nbsp;* but WITHOUT ANY WARRANTY; without even the implied warranty of</td>
<td class="LineNum">10</td><td class="Same">&nbsp;* but WITHOUT ANY WARRANTY; without even the implied warranty of</td></tr>
<tr><td class="LineNum">11</td><td class="Same">&nbsp;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</td>
<td class="LineNum">11</td><td class="Same">&nbsp;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</td></tr>
<tr><td class="LineNum">12</td><td class="Same">&nbsp;* Lesser General Public License for more details.</td>
<td class="LineNum">12</td><td class="Same">&nbsp;* Lesser General Public License for more details.</td></tr>
<tr><td class="LineNum">13</td><td class="Same">&nbsp;*</td>
<td class="LineNum">13</td><td class="Same">&nbsp;*</td></tr>
<tr><td class="LineNum">14</td><td class="Same">&nbsp;* You should have received a copy of the GNU Lesser General Public</td>
<td class="LineNum">14</td><td class="Same">&nbsp;* You should have received a copy of the GNU Lesser General Public</td></tr>
<tr><td class="LineNum">15</td><td class="Same">&nbsp;* License along with this library; if not, write to the Free Software</td>
<td class="LineNum">15</td><td class="Same">&nbsp;* License along with this library; if not, write to the Free Software</td></tr>
<tr><td class="LineNum">16</td><td class="Same">&nbsp;* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</td>
<td class="LineNum">16</td><td class="Same">&nbsp;* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</td></tr>
<tr><td class="LineNum">17</td><td class="Same">&nbsp;*/</td>
<td class="LineNum">17</td><td class="Same">&nbsp;*/</td></tr>
<tr><td class="LineNum">18</td><td class="Same">package alice.tuprolog;</td>
<td class="LineNum">18</td><td class="Same">package alice.tuprolog;</td></tr>
<tr><td class="LineNum">19</td><td class="Same">&nbsp;</td>
<td class="LineNum">19</td><td class="Same">&nbsp;</td></tr>
<tr><td class="LineNum">20</td><td class="Same">import java.util.*;</td>
<td class="LineNum">20</td><td class="Same">import java.util.*;</td></tr>
<tr><td class="LineNum">21</td><td class="Same">import utility.StaticCounter;</td>
<td class="LineNum">21</td><td class="Same">import utility.StaticCounter;</td></tr>
<tr><td class="LineNum">22</td><td class="Same">&nbsp;</td>
<td class="LineNum">22</td><td class="Same">&nbsp;</td></tr>
<tr><td class="LineNum">23</td><td class="Same">/**</td>
<td class="LineNum">23</td><td class="Same">/**</td></tr>
<tr><td class="LineNum">24</td><td class="Same">&nbsp;* This class represents a variable term.</td>
<td class="LineNum">24</td><td class="Same">&nbsp;* This class represents a variable term.</td></tr>
<tr><td class="LineNum">25</td><td class="Same">&nbsp;* Variables are identified by a name (which must starts with</td>
<td class="LineNum">25</td><td class="Same">&nbsp;* Variables are identified by a name (which must starts with</td></tr>
<tr><td class="LineNum">26</td><td class="Same">&nbsp;* an upper case letter) or the anonymous ('_') name.</td>
<td class="LineNum">26</td><td class="Same">&nbsp;* an upper case letter) or the anonymous ('_') name.</td></tr>
<tr><td class="LineNum">27</td><td class="Same">&nbsp;*</td>
<td class="LineNum">27</td><td class="Same">&nbsp;*</td></tr>
<tr><td class="LineNum">28</td><td class="Same">&nbsp;* @see Term</td>
<td class="LineNum">28</td><td class="Same">&nbsp;* @see Term</td></tr>
<tr><td class="LineNum">29</td><td class="Same">&nbsp;*</td>
<td class="LineNum">29</td><td class="Same">&nbsp;*</td></tr>
<tr><td class="LineNum">30</td><td class="Same">&nbsp;*/</td>
<td class="LineNum">30</td><td class="Same">&nbsp;*/</td></tr>
<tr><td class="LineNum">31</td><td class="Same">public class Var extends Term {</td>
<td class="LineNum">31</td><td class="Same">public class Var extends Term {</td></tr>
<tr><td class="LineNum">32</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">32</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">33</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">33</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">34</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;final static String ANY = "_";</td>
<td class="LineNum">34</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;final static String ANY = "_";</td></tr>
<tr><td class="LineNum">35</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">35</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">36</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;// the name identifying the var</td>
<td class="LineNum">36</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;// the name identifying the var</td></tr>
<tr><td class="LineNum">37</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private String name;</td>
<td class="LineNum">37</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private String name;</td></tr>
<tr><td class="LineNum">38</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private StringBuilder completeName;     /* Reviewed by Paolo Contessi: String -&gt; StringBuilder */</td>
<td class="LineNum">38</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private StringBuilder completeName;     /* Reviewed by Paolo Contessi: String -&gt; StringBuilder */</td></tr>
<tr><td class="LineNum">39</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">39</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">40</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private Term   link;            /* link is used for unification process */</td>
<td class="LineNum">40</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private Term   link;            /* link is used for unification process */</td></tr>
<tr><td class="LineNum">41</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private long   timestamp;       /* timestamp is used for fix vars order */</td>
<td class="LineNum">41</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private long   timestamp;       /* timestamp is used for fix vars order */</td></tr>
<tr><td class="LineNum">42</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private int    id;          /* id of ExecCtx owners of this var util for renaming*/</td>
<td class="LineNum">42</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private int    id;          /* id of ExecCtx owners of this var util for renaming*/</td></tr>
<tr><td class="LineNum">43</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">43</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">44</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">44</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">45</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">45</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">46</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Creates a variable identified by a name.</td>
<td class="LineNum">46</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Creates a variable identified by a name.</td></tr>
<tr><td class="LineNum">47</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">47</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">48</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The name must starts with an upper case letter or the underscore. If an underscore is</td>
<td class="LineNum">48</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The name must starts with an upper case letter or the underscore. If an underscore is</td></tr>
<tr><td class="LineNum">49</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* specified as a name, the variable is anonymous.</td>
<td class="LineNum">49</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* specified as a name, the variable is anonymous.</td></tr>
<tr><td class="LineNum">50</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">50</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">51</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param n is the name</td>
<td class="LineNum">51</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param n is the name</td></tr>
<tr><td class="LineNum">52</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @throws InvalidTermException if n is not a valid Prolog variable name</td>
<td class="LineNum">52</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @throws InvalidTermException if n is not a valid Prolog variable name</td></tr>
<tr><td class="LineNum">53</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">53</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">54</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public Var(String n) {</td>
<td class="LineNum">54</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public Var(String n) {</td></tr>
<tr><td class="LineNum">55</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = null;</td>
<td class="LineNum">55</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = null;</td></tr>
<tr><td class="LineNum">56</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = -1; //no execCtx owners</td>
<td class="LineNum">56</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = -1; //no execCtx owners</td></tr>
<tr><td class="LineNum">57</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (n.equals(ANY)) {</td>
<td class="LineNum">57</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (n.equals(ANY)) {</td></tr>
<tr><td class="LineNum">58</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = null;</td>
<td class="LineNum">58</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = null;</td></tr>
<tr><td class="LineNum">59</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = new StringBuilder();</td>
<td class="LineNum">59</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = new StringBuilder();</td></tr>
<tr><td class="LineNum">60</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (Character.isUpperCase(n.charAt(0))||</td>
<td class="LineNum">60</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (Character.isUpperCase(n.charAt(0))||</td></tr>
<tr><td class="LineNum">61</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n.startsWith(ANY))) {</td>
<td class="LineNum">61</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n.startsWith(ANY))) {</td></tr>
<tr><td class="LineNum">62</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = n;</td>
<td class="LineNum">62</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = n;</td></tr>
<tr><td class="LineNum">63</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = new StringBuilder(n);</td>
<td class="LineNum">63</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = new StringBuilder(n);</td></tr>
<tr><td class="LineNum">64</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">64</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">65</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new InvalidTermException("Illegal variable name: " + n);</td>
<td class="LineNum">65</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new InvalidTermException("Illegal variable name: " + n);</td></tr>
<tr><td class="LineNum">66</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">66</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">67</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">67</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">68</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">68</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">69</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">69</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">70</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">70</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">71</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Creates an anonymous variable</td>
<td class="LineNum">71</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Creates an anonymous variable</td></tr>
<tr><td class="LineNum">72</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">72</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">73</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  This is equivalent to build a variable with name _</td>
<td class="LineNum">73</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  This is equivalent to build a variable with name _</td></tr>
<tr><td class="LineNum">74</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">74</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">75</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public Var() {</td>
<td class="LineNum">75</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public Var() {</td></tr>
<tr><td class="LineNum">76</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = null;</td>
<td class="LineNum">76</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = null;</td></tr>
<tr><td class="LineNum">77</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = new StringBuilder();</td>
<td class="LineNum">77</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = new StringBuilder();</td></tr>
<tr><td class="LineNum">78</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = null;</td>
<td class="LineNum">78</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = null;</td></tr>
<tr><td class="LineNum">79</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = ORIGINAL;</td>
<td class="LineNum">79</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = ORIGINAL;</td></tr>
<tr><td class="LineNum">80</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = 0;</td>
<td class="LineNum">80</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = 0;</td></tr>
<tr><td class="LineNum">81</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">81</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">82</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">82</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">83</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">83</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">84</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">84</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">85</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Creates a internal engine variable.</td>
<td class="LineNum">85</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Creates a internal engine variable.</td></tr>
<tr><td class="LineNum">86</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">86</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">87</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param n is the name</td>
<td class="LineNum">87</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param n is the name</td></tr>
<tr><td class="LineNum">88</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param id is the id of ExecCtx</td>
<td class="LineNum">88</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param id is the id of ExecCtx</td></tr>
<tr><td class="LineNum">89</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param alias code to discriminate external vars</td>
<td class="LineNum">89</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param alias code to discriminate external vars</td></tr>
<tr><td class="LineNum">90</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param time is timestamp</td>
<td class="LineNum">90</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param time is timestamp</td></tr>
<tr><td class="LineNum">91</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">91</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">92</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private Var(String n, int id, int alias, long time) {</td>
<td class="LineNum">92</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private Var(String n, int id, int alias, long time) {</td></tr>
<tr><td class="LineNum">93</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = n;</td>
<td class="LineNum">93</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = n;</td></tr>
<tr><td class="LineNum">94</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = new StringBuilder();</td>
<td class="LineNum">94</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = new StringBuilder();</td></tr>
<tr><td class="LineNum">95</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = time;</td>
<td class="LineNum">95</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = time;</td></tr>
<tr><td class="LineNum">96</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link  = null;</td>
<td class="LineNum">96</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link  = null;</td></tr>
<tr><td class="LineNum">97</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(id &lt; 0) id = ORIGINAL;</td>
<td class="LineNum">97</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(id &lt; 0) id = ORIGINAL;</td></tr>
<tr><td class="LineNum">98</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rename(id,alias);</td>
<td class="LineNum">98</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rename(id,alias);</td></tr>
<tr><td class="LineNum">99</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">99</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">100</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">100</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">101</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/* Identify kind of renaming */</td>
<td class="LineNum">101</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/* Identify kind of renaming */</td></tr>
<tr><td class="LineNum">102</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;final static int ORIGINAL = -1;</td>
<td class="LineNum">102</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;final static int ORIGINAL = -1;</td></tr>
<tr><td class="LineNum">103</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;final static int PROGRESSIVE = -2;</td>
<td class="LineNum">103</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;final static int PROGRESSIVE = -2;</td></tr>
<tr><td class="LineNum">104</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">104</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">105</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">105</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">106</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Rename variable (assign completeName) </td>
<td class="LineNum">106</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Rename variable (assign completeName) </td></tr>
<tr><td class="LineNum">107</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">107</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">108</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;void rename(int idExecCtx, int count) { /* Reviewed by Paolo Contessi: String -&gt; StringBuilder */</td>
<td class="LineNum">108</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;void rename(int idExecCtx, int count) { /* Reviewed by Paolo Contessi: String -&gt; StringBuilder */</td></tr>
<tr><td class="LineNum">109</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = idExecCtx;</td>
<td class="LineNum">109</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = idExecCtx;</td></tr>
<tr><td class="LineNum">110</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">110</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">111</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (idExecCtx &gt; -1) {</td>
<td class="LineNum">111</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (idExecCtx &gt; -1) {</td></tr>
<tr><td class="LineNum">112</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//completeName = name + "_e" + idExecCtx;</td>
<td class="LineNum">112</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//completeName = name + "_e" + idExecCtx;</td></tr>
<tr><td class="LineNum">113</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = completeName</td>
<td class="LineNum">113</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = completeName</td></tr>
<tr><td class="LineNum">114</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.delete(0, completeName.length())</td>
<td class="LineNum">114</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.delete(0, completeName.length())</td></tr>
<tr><td class="LineNum">115</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.append(name).append("_e").append(idExecCtx);</td>
<td class="LineNum">115</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.append(name).append("_e").append(idExecCtx);</td></tr>
<tr><td class="LineNum">116</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">116</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">117</td><td class="Same">&nbsp;</td>
<td class="LineNum">117</td><td class="Same">&nbsp;</td></tr>
<tr><td class="LineNum">118</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (id == ORIGINAL) { //completeName = name;</td>
<td class="LineNum">118</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (id == ORIGINAL) { //completeName = name;</td></tr>
<tr><td class="LineNum">119</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = completeName</td>
<td class="LineNum">119</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = completeName</td></tr>
<tr><td class="LineNum">120</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.delete(0, completeName.length())</td>
<td class="LineNum">120</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.delete(0, completeName.length())</td></tr>
<tr><td class="LineNum">121</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.append(name);</td>
<td class="LineNum">121</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.append(name);</td></tr>
<tr><td class="LineNum">122</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">122</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">123</td><td class="Same">&nbsp;</td>
<td class="LineNum">123</td><td class="Same">&nbsp;</td></tr>
<tr><td class="LineNum">124</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (id == PROGRESSIVE) { //completeName = "_"+count;</td>
<td class="LineNum">124</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (id == PROGRESSIVE) { //completeName = "_"+count;</td></tr>
<tr><td class="LineNum">125</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = completeName</td>
<td class="LineNum">125</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeName = completeName</td></tr>
<tr><td class="LineNum">126</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.delete(0, completeName.length())</td>
<td class="LineNum">126</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.delete(0, completeName.length())</td></tr>
<tr><td class="LineNum">127</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.append("_").append(count);</td>
<td class="LineNum">127</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.append("_").append(count);</td></tr>
<tr><td class="LineNum">128</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">128</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">129</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">129</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">130</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">130</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">131</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">131</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">132</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">132</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">133</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets a copy of this variable.</td>
<td class="LineNum">133</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets a copy of this variable.</td></tr>
<tr><td class="LineNum">134</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">134</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">135</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the variable is not present in the list passed as argument,</td>
<td class="LineNum">135</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the variable is not present in the list passed as argument,</td></tr>
<tr><td class="LineNum">136</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* a copy of this variable is returned and added to the list. If instead</td>
<td class="LineNum">136</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* a copy of this variable is returned and added to the list. If instead</td></tr>
<tr><td class="LineNum">137</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* a variable with the same time identifier is found in the list,</td>
<td class="LineNum">137</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* a variable with the same time identifier is found in the list,</td></tr>
<tr><td class="LineNum">138</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* then the variable in the list is returned.</td>
<td class="LineNum">138</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* then the variable in the list is returned.</td></tr>
<tr><td class="LineNum">139</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">139</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">140</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;Term copy(AbstractMap vMap, int idExecCtx) {</td>
<td class="LineNum">140</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;Term copy(AbstractMap vMap, int idExecCtx) {</td></tr>
<tr><td class="LineNum">141</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td>
<td class="LineNum">141</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td></tr>
<tr><td class="LineNum">142</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td>
<td class="LineNum">142</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td></tr>
<tr><td class="LineNum">143</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Var v = (Var)(vMap.get(this));</td>
<td class="LineNum">143</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Var v = (Var)(vMap.get(this));</td></tr>
<tr><td class="LineNum">144</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v == null) {</td>
<td class="LineNum">144</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v == null) {</td></tr>
<tr><td class="LineNum">145</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//No occurence of v before</td>
<td class="LineNum">145</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//No occurence of v before</td></tr>
<tr><td class="LineNum">146</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = new Var(name,idExecCtx,0,timestamp);</td>
<td class="LineNum">146</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = new Var(name,idExecCtx,0,timestamp);</td></tr>
<tr><td class="LineNum">147</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vMap.put(this,v);</td>
<td class="LineNum">147</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vMap.put(this,v);</td></tr>
<tr><td class="LineNum">148</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">148</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">149</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return v;</td>
<td class="LineNum">149</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return v;</td></tr>
<tr><td class="LineNum">150</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">150</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">151</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.copy(vMap, idExecCtx);</td>
<td class="LineNum">151</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.copy(vMap, idExecCtx);</td></tr>
<tr><td class="LineNum">152</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">152</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">153</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">153</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">154</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">154</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">155</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">155</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">156</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">156</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">157</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets a copy of this variable.</td>
<td class="LineNum">157</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets a copy of this variable.</td></tr>
<tr><td class="LineNum">158</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">158</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">159</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;Term copy(AbstractMap vMap, AbstractMap substMap) {</td>
<td class="LineNum">159</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;Term copy(AbstractMap vMap, AbstractMap substMap) {</td></tr>
<tr><td class="LineNum">160</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Var v;</td>
<td class="LineNum">160</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Var v;</td></tr>
<tr><td class="LineNum">161</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object temp = vMap.get(this);</td>
<td class="LineNum">161</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object temp = vMap.get(this);</td></tr>
<tr><td class="LineNum">162</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (temp == null) {</td>
<td class="LineNum">162</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (temp == null) {</td></tr>
<tr><td class="LineNum">163</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = new Var(null,Var.PROGRESSIVE,vMap.size(),timestamp);//name,Var.PROGRESSIVE,vMap.size(),timestamp);</td>
<td class="LineNum">163</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = new Var(null,Var.PROGRESSIVE,vMap.size(),timestamp);//name,Var.PROGRESSIVE,vMap.size(),timestamp);</td></tr>
<tr><td class="LineNum">164</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vMap.put(this,v);</td>
<td class="LineNum">164</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vMap.put(this,v);</td></tr>
<tr><td class="LineNum">165</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">165</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">166</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = (Var) temp;</td>
<td class="LineNum">166</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = (Var) temp;</td></tr>
<tr><td class="LineNum">167</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">167</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">168</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t = getTerm();</td>
<td class="LineNum">168</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t = getTerm();</td></tr>
<tr><td class="LineNum">169</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Var) {</td>
<td class="LineNum">169</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Var) {</td></tr>
<tr><td class="LineNum">170</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object tt = substMap.get(t);</td>
<td class="LineNum">170</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object tt = substMap.get(t);</td></tr>
<tr><td class="LineNum">171</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == null) {</td>
<td class="LineNum">171</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == null) {</td></tr>
<tr><td class="LineNum">172</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;substMap.put(t,v);</td>
<td class="LineNum">172</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;substMap.put(t,v);</td></tr>
<tr><td class="LineNum">173</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.link = null;</td>
<td class="LineNum">173</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.link = null;</td></tr>
<tr><td class="LineNum">174</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">174</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">175</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.link = (tt != v) ? (Var)tt : null;</td>
<td class="LineNum">175</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.link = (tt != v) ? (Var)tt : null;</td></tr>
<tr><td class="LineNum">176</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">176</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">177</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">177</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">178</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Struct) {</td>
<td class="LineNum">178</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Struct) {</td></tr>
<tr><td class="LineNum">179</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.link = t.copy(vMap,substMap);</td>
<td class="LineNum">179</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.link = t.copy(vMap,substMap);</td></tr>
<tr><td class="LineNum">180</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">180</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">181</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Number) v.link = t;</td>
<td class="LineNum">181</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Number) v.link = t;</td></tr>
<tr><td class="LineNum">182</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return v;</td>
<td class="LineNum">182</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return v;</td></tr>
<tr><td class="LineNum">183</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">183</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">184</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">184</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">185</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">185</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">186</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">186</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">187</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* De-unify the variable</td>
<td class="LineNum">187</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* De-unify the variable</td></tr>
<tr><td class="LineNum">188</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">188</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">189</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public void free() {</td>
<td class="LineNum">189</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public void free() {</td></tr>
<tr><td class="LineNum">190</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = null;</td>
<td class="LineNum">190</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = null;</td></tr>
<tr><td class="LineNum">191</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">191</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">192</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">192</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">193</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">193</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">194</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">194</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">195</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* De-unify the variables of list</td>
<td class="LineNum">195</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* De-unify the variables of list</td></tr>
<tr><td class="LineNum">196</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">196</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">197</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public static void free(List varsUnified) {</td>
<td class="LineNum">197</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public static void free(List varsUnified) {</td></tr>
<tr><td class="LineNum">198</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Iterator it = varsUnified.iterator();</td>
<td class="LineNum">198</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Iterator it = varsUnified.iterator();</td></tr>
<tr><td class="LineNum">199</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(it.hasNext()){</td>
<td class="LineNum">199</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(it.hasNext()){</td></tr>
<tr><td class="LineNum">200</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((Var)it.next()).free();                </td>
<td class="LineNum">200</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((Var)it.next()).free();                </td></tr>
<tr><td class="LineNum">201</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">201</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">202</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">202</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">203</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">203</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">204</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">204</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">205</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">205</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">206</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the name of the variable</td>
<td class="LineNum">206</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the name of the variable</td></tr>
<tr><td class="LineNum">207</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">207</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">208</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public String getName() {</td>
<td class="LineNum">208</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public String getName() {</td></tr>
<tr><td class="LineNum">209</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name!=null) {</td>
<td class="LineNum">209</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name!=null) {</td></tr>
<tr><td class="LineNum">210</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return completeName.toString();</td>
<td class="LineNum">210</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return completeName.toString();</td></tr>
<tr><td class="LineNum">211</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">211</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">212</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//return ANY+timestamp;</td>
<td class="LineNum">212</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//return ANY+timestamp;</td></tr>
<tr><td class="LineNum">213</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ANY;</td>
<td class="LineNum">213</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ANY;</td></tr>
<tr><td class="LineNum">214</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">214</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">215</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">215</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">216</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">216</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">217</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">217</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">218</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the name of the variable</td>
<td class="LineNum">218</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the name of the variable</td></tr>
<tr><td class="LineNum">219</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">219</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">220</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public String getOriginalName() {</td>
<td class="LineNum">220</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public String getOriginalName() {</td></tr>
<tr><td class="LineNum">221</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name!=null) {</td>
<td class="LineNum">221</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name!=null) {</td></tr>
<tr><td class="LineNum">222</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return name;</td>
<td class="LineNum">222</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return name;</td></tr>
<tr><td class="LineNum">223</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">223</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">224</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//return ANY+timestamp;</td>
<td class="LineNum">224</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//return ANY+timestamp;</td></tr>
<tr><td class="LineNum">225</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ANY + hashCode();</td>
<td class="LineNum">225</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ANY + hashCode();</td></tr>
<tr><td class="LineNum">226</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">226</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">227</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">227</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">228</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">228</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">229</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">229</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">230</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">230</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">231</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  Gets the term which is referred by the variable.</td>
<td class="LineNum">231</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  Gets the term which is referred by the variable.</td></tr>
<tr><td class="LineNum">232</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">232</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">233</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  For unbound variable it is the variable itself, while</td>
<td class="LineNum">233</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  For unbound variable it is the variable itself, while</td></tr>
<tr><td class="LineNum">234</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  for bound variable it is the bound term.</td>
<td class="LineNum">234</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  for bound variable it is the bound term.</td></tr>
<tr><td class="LineNum">235</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">235</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">236</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public Term getTerm() {</td>
<td class="LineNum">236</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public Term getTerm() {</td></tr>
<tr><td class="LineNum">237</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = this;</td>
<td class="LineNum">237</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = this;</td></tr>
<tr><td class="LineNum">238</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t  = link;</td>
<td class="LineNum">238</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t  = link;</td></tr>
<tr><td class="LineNum">239</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (t != null ) {</td>
<td class="LineNum">239</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (t != null ) {</td></tr>
<tr><td class="LineNum">240</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tt = t;</td>
<td class="LineNum">240</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tt = t;</td></tr>
<tr><td class="LineNum">241</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Var) {</td>
<td class="LineNum">241</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Var) {</td></tr>
<tr><td class="LineNum">242</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t  = ((Var)t).link;</td>
<td class="LineNum">242</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t  = ((Var)t).link;</td></tr>
<tr><td class="LineNum">243</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">243</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">244</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td>
<td class="LineNum">244</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">245</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">245</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">246</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">246</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">247</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt;</td>
<td class="LineNum">247</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt;</td></tr>
<tr><td class="LineNum">248</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">248</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">249</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">249</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">250</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">250</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">251</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">251</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">252</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  Gets the term which is direct referred by the variable.</td>
<td class="LineNum">252</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  Gets the term which is direct referred by the variable.</td></tr>
<tr><td class="LineNum">253</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">253</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">254</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;Term getLink() {</td>
<td class="LineNum">254</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;Term getLink() {</td></tr>
<tr><td class="LineNum">255</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return link;</td>
<td class="LineNum">255</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return link;</td></tr>
<tr><td class="LineNum">256</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">256</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">257</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">257</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">258</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">258</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">259</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Set the term which is direct bound</td>
<td class="LineNum">259</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Set the term which is direct bound</td></tr>
<tr><td class="LineNum">260</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">260</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">261</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;void setLink(Term l) {</td>
<td class="LineNum">261</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;void setLink(Term l) {</td></tr>
<tr><td class="LineNum">262</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = l;</td>
<td class="LineNum">262</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = l;</td></tr>
<tr><td class="LineNum">263</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">263</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">264</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">264</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">265</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">265</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">266</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Set the timestamp</td>
<td class="LineNum">266</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Set the timestamp</td></tr>
<tr><td class="LineNum">267</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">267</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">268</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;void setTimestamp(long t) {</td>
<td class="LineNum">268</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;void setTimestamp(long t) {</td></tr>
<tr><td class="LineNum">269</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = t;</td>
<td class="LineNum">269</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = t;</td></tr>
<tr><td class="LineNum">270</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">270</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">271</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">271</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">272</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;//</td>
<td class="LineNum">272</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;//</td></tr>
<tr><td class="LineNum">273</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">273</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">274</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isNumber() {</td>
<td class="LineNum">274</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isNumber() {</td></tr>
<tr><td class="LineNum">275</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">275</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">276</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">276</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">277</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">277</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">278</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isStruct() {</td>
<td class="LineNum">278</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isStruct() {</td></tr>
<tr><td class="LineNum">279</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">279</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">280</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">280</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">281</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">281</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">282</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isVar() {</td>
<td class="LineNum">282</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isVar() {</td></tr>
<tr><td class="LineNum">283</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td>
<td class="LineNum">283</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td></tr>
<tr><td class="LineNum">284</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">284</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">285</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">285</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">286</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isEmptyList() {</td>
<td class="LineNum">286</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isEmptyList() {</td></tr>
<tr><td class="LineNum">287</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td>
<td class="LineNum">287</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td></tr>
<tr><td class="LineNum">288</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td>
<td class="LineNum">288</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td></tr>
<tr><td class="LineNum">289</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">289</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">290</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">290</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">291</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isEmptyList();</td>
<td class="LineNum">291</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isEmptyList();</td></tr>
<tr><td class="LineNum">292</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">292</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">293</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">293</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">294</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">294</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">295</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isAtomic() {</td>
<td class="LineNum">295</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isAtomic() {</td></tr>
<tr><td class="LineNum">296</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td>
<td class="LineNum">296</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td></tr>
<tr><td class="LineNum">297</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td>
<td class="LineNum">297</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td></tr>
<tr><td class="LineNum">298</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">298</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">299</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">299</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">300</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isAtomic();</td>
<td class="LineNum">300</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isAtomic();</td></tr>
<tr><td class="LineNum">301</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">301</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">302</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">302</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">303</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">303</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">304</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isCompound() {</td>
<td class="LineNum">304</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isCompound() {</td></tr>
<tr><td class="LineNum">305</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td>
<td class="LineNum">305</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td></tr>
<tr><td class="LineNum">306</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td>
<td class="LineNum">306</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td></tr>
<tr><td class="LineNum">307</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">307</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">308</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">308</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">309</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isCompound();</td>
<td class="LineNum">309</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isCompound();</td></tr>
<tr><td class="LineNum">310</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">310</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">311</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">311</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">312</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">312</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">313</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isAtom() {</td>
<td class="LineNum">313</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isAtom() {</td></tr>
<tr><td class="LineNum">314</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td>
<td class="LineNum">314</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td></tr>
<tr><td class="LineNum">315</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td>
<td class="LineNum">315</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td></tr>
<tr><td class="LineNum">316</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">316</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">317</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">317</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">318</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isAtom();</td>
<td class="LineNum">318</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isAtom();</td></tr>
<tr><td class="LineNum">319</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">319</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">320</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">320</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">321</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">321</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">322</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isList() {</td>
<td class="LineNum">322</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isList() {</td></tr>
<tr><td class="LineNum">323</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t = getTerm();</td>
<td class="LineNum">323</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t = getTerm();</td></tr>
<tr><td class="LineNum">324</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t == this)</td>
<td class="LineNum">324</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t == this)</td></tr>
<tr><td class="LineNum">325</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">325</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">326</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</td>
<td class="LineNum">326</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</td></tr>
<tr><td class="LineNum">327</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isList();</td>
<td class="LineNum">327</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isList();</td></tr>
<tr><td class="LineNum">328</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">328</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">329</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">329</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">330</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isGround(){</td>
<td class="LineNum">330</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isGround(){</td></tr>
<tr><td class="LineNum">331</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td>
<td class="LineNum">331</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term t=getTerm();</td></tr>
<tr><td class="LineNum">332</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td>
<td class="LineNum">332</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==this) {</td></tr>
<tr><td class="LineNum">333</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">333</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">334</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">334</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">335</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isGround();</td>
<td class="LineNum">335</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.isGround();</td></tr>
<tr><td class="LineNum">336</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">336</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">337</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">337</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">338</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">338</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">339</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;//</td>
<td class="LineNum">339</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;//</td></tr>
<tr><td class="LineNum">340</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">340</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">341</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">341</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">342</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Tests if this variable is ANY</td>
<td class="LineNum">342</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Tests if this variable is ANY</td></tr>
<tr><td class="LineNum">343</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">343</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">344</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isAnonymous() {</td>
<td class="LineNum">344</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isAnonymous() {</td></tr>
<tr><td class="LineNum">345</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return name == null;</td>
<td class="LineNum">345</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return name == null;</td></tr>
<tr><td class="LineNum">346</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">346</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">347</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">347</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">348</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">348</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">349</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Tests if this variable is bound</td>
<td class="LineNum">349</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Tests if this variable is bound</td></tr>
<tr><td class="LineNum">350</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">350</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">351</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">351</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">352</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isBound() {</td>
<td class="LineNum">352</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isBound() {</td></tr>
<tr><td class="LineNum">353</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return link != null;</td>
<td class="LineNum">353</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return link != null;</td></tr>
<tr><td class="LineNum">354</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">354</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">355</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">355</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">356</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">356</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">357</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">357</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">358</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* finds var occurence in a Struct, doing occur-check.</td>
<td class="LineNum">358</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* finds var occurence in a Struct, doing occur-check.</td></tr>
<tr><td class="LineNum">359</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (era una findIn)</td>
<td class="LineNum">359</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (era una findIn)</td></tr>
<tr><td class="LineNum">360</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param vl TODO</td>
<td class="LineNum">360</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param vl TODO</td></tr>
<tr><td class="LineNum">361</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">361</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">362</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private boolean occurCheck(List vl, Struct t) {</td>
<td class="LineNum">362</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;private boolean occurCheck(List vl, Struct t) {</td></tr>
<tr><td class="LineNum">363</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int arity=t.getArity();</td>
<td class="LineNum">363</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int arity=t.getArity();</td></tr>
<tr><td class="LineNum">364</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int c = 0;c &lt; arity;c++) {</td>
<td class="LineNum">364</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int c = 0;c &lt; arity;c++) {</td></tr>
<tr><td class="LineNum">365</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term at = t.getTerm(c);</td>
<td class="LineNum">365</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term at = t.getTerm(c);</td></tr>
<tr><td class="LineNum">366</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (at instanceof Struct) {</td>
<td class="LineNum">366</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (at instanceof Struct) {</td></tr>
<tr><td class="LineNum">367</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (occurCheck(vl, (Struct)at)) {</td>
<td class="LineNum">367</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (occurCheck(vl, (Struct)at)) {</td></tr>
<tr><td class="LineNum">368</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td>
<td class="LineNum">368</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td></tr>
<tr><td class="LineNum">369</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">369</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">370</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (at instanceof Var) {</td>
<td class="LineNum">370</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (at instanceof Var) {</td></tr>
<tr><td class="LineNum">371</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Var v = (Var)at;</td>
<td class="LineNum">371</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Var v = (Var)at;</td></tr>
<tr><td class="LineNum">372</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v.link == null) {</td>
<td class="LineNum">372</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v.link == null) {</td></tr>
<tr><td class="LineNum">373</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vl.add(v);</td>
<td class="LineNum">373</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vl.add(v);</td></tr>
<tr><td class="LineNum">374</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">374</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">375</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this == v) {</td>
<td class="LineNum">375</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this == v) {</td></tr>
<tr><td class="LineNum">376</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td>
<td class="LineNum">376</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td></tr>
<tr><td class="LineNum">377</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">377</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">378</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">378</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">379</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">379</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">380</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">380</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">381</td><td class="Same">&nbsp;</td>
<td class="LineNum">381</td><td class="Same">&nbsp;</td></tr>
<tr><td class="LineNum">382</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">382</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">383</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">383</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">384</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;//</td>
<td class="LineNum">384</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;//</td></tr>
<tr><td class="LineNum">385</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">385</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">386</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">386</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">387</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Resolve the occurence of variables in a Term</td>
<td class="LineNum">387</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Resolve the occurence of variables in a Term</td></tr>
<tr><td class="LineNum">388</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">388</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">389</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;long resolveTerm(long count) {</td>
<td class="LineNum">389</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;long resolveTerm(long count) {</td></tr>
<tr><td class="LineNum">390</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt=getTerm();</td>
<td class="LineNum">390</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt=getTerm();</td></tr>
<tr><td class="LineNum">391</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt != this) {</td>
<td class="LineNum">391</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt != this) {</td></tr>
<tr><td class="LineNum">392</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.resolveTerm(count);</td>
<td class="LineNum">392</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.resolveTerm(count);</td></tr>
<tr><td class="LineNum">393</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">393</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">394</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = count;</td>
<td class="LineNum">394</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = count;</td></tr>
<tr><td class="LineNum">395</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return count++;</td>
<td class="LineNum">395</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return count++;</td></tr>
<tr><td class="LineNum">396</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">396</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">397</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">397</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">398</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">398</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">399</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">399</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">400</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;//</td>
<td class="LineNum">400</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;//</td></tr>
<tr><td class="LineNum">401</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">401</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">402</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">402</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">403</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* var unification.</td>
<td class="LineNum">403</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* var unification.</td></tr>
<tr><td class="LineNum">404</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td>
<td class="LineNum">404</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td></tr>
<tr><td class="LineNum">405</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* First, verify the Term eventually already unified with the same Var</td>
<td class="LineNum">405</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* First, verify the Term eventually already unified with the same Var</td></tr>
<tr><td class="LineNum">406</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the Term exist, unify var with that term, in order to handle situation</td>
<td class="LineNum">406</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the Term exist, unify var with that term, in order to handle situation</td></tr>
<tr><td class="LineNum">407</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* as (A = p(X) , A = p(1)) which must produce X/1.</td>
<td class="LineNum">407</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* as (A = p(X) , A = p(1)) which must produce X/1.</td></tr>
<tr><td class="LineNum">408</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td>
<td class="LineNum">408</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td></tr>
<tr><td class="LineNum">409</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If instead the var is not already unified, then:</td>
<td class="LineNum">409</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If instead the var is not already unified, then:</td></tr>
<tr><td class="LineNum">410</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td>
<td class="LineNum">410</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td></tr>
<tr><td class="LineNum">411</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the Term is a var bound to X, then try unification with X</td>
<td class="LineNum">411</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the Term is a var bound to X, then try unification with X</td></tr>
<tr><td class="LineNum">412</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* so for example if A=1, B=A then B is unified to 1 and not to A</td>
<td class="LineNum">412</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* so for example if A=1, B=A then B is unified to 1 and not to A</td></tr>
<tr><td class="LineNum">413</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (note that it's coherent with chronological backtracking:</td>
<td class="LineNum">413</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (note that it's coherent with chronological backtracking:</td></tr>
<tr><td class="LineNum">414</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the eventually backtracked A unification is always after</td>
<td class="LineNum">414</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the eventually backtracked A unification is always after</td></tr>
<tr><td class="LineNum">415</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* backtracking of B unification.</td>
<td class="LineNum">415</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* backtracking of B unification.</td></tr>
<tr><td class="LineNum">416</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td>
<td class="LineNum">416</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td></tr>
<tr><td class="LineNum">417</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if are the same Var, unification must succeed, but without any new</td>
<td class="LineNum">417</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if are the same Var, unification must succeed, but without any new</td></tr>
<tr><td class="LineNum">418</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* bindings (to avoid cycles for extends in A = B, B = A)</td>
<td class="LineNum">418</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* bindings (to avoid cycles for extends in A = B, B = A)</td></tr>
<tr><td class="LineNum">419</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td>
<td class="LineNum">419</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td></tr>
<tr><td class="LineNum">420</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the term is a number, then it's a success and new link is created</td>
<td class="LineNum">420</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the term is a number, then it's a success and new link is created</td></tr>
<tr><td class="LineNum">421</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (retractable by means of a code)</td>
<td class="LineNum">421</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (retractable by means of a code)</td></tr>
<tr><td class="LineNum">422</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td>
<td class="LineNum">422</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;</td></tr>
<tr><td class="LineNum">423</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the term is a compound, then occur check test is executed:</td>
<td class="LineNum">423</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if the term is a compound, then occur check test is executed:</td></tr>
<tr><td class="LineNum">424</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the var must not appear in the compound ( avoid X=p(X),</td>
<td class="LineNum">424</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the var must not appear in the compound ( avoid X=p(X),</td></tr>
<tr><td class="LineNum">425</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* or p(X,X)=p(Y,f(Y)) ); if occur check is ok</td>
<td class="LineNum">425</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* or p(X,X)=p(Y,f(Y)) ); if occur check is ok</td></tr>
<tr><td class="LineNum">426</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* then it's success and a new link is created (retractable by a code)</td>
<td class="LineNum">426</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* then it's success and a new link is created (retractable by a code)</td></tr>
<tr><td class="LineNum">427</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">427</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">428</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;boolean unify(List vl1, List vl2, Term t) {</td>
<td class="LineNum">428</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;boolean unify(List vl1, List vl2, Term t) {</td></tr>
<tr><td class="LineNum">429</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td>
<td class="LineNum">429</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td></tr>
<tr><td class="LineNum">430</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tt == this) {</td>
<td class="LineNum">430</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tt == this) {</td></tr>
<tr><td class="LineNum">431</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = t.getTerm();</td>
<td class="LineNum">431</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = t.getTerm();</td></tr>
<tr><td class="LineNum">432</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Var) { </td>
<td class="LineNum">432</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t instanceof Var) { </td></tr>
<tr><td class="LineNum">433</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this == t) {</td>
<td class="LineNum">433</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this == t) {</td></tr>
<tr><td class="LineNum">434</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{</td>
<td class="LineNum">434</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{</td></tr>
<tr><td class="LineNum">435</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vl1.add(this);              </td>
<td class="LineNum">435</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vl1.add(this);              </td></tr>
<tr><td class="LineNum">436</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(NullPointerException e) {/* vl1==null mean nothing intresting for the caller */}</td>
<td class="LineNum">436</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(NullPointerException e) {/* vl1==null mean nothing intresting for the caller */}</td></tr>
<tr><td class="LineNum">437</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td>
<td class="LineNum">437</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td></tr>
<tr><td class="LineNum">438</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">438</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">439</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (t instanceof Struct) {</td>
<td class="LineNum">439</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (t instanceof Struct) {</td></tr>
<tr><td class="LineNum">440</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;</td>
<td class="LineNum">440</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;</td></tr>
<tr><td class="LineNum">441</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// occur-check</td>
<td class="LineNum">441</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// occur-check</td></tr>
<tr><td class="LineNum">442</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (occurCheck(vl2, (Struct)t)) {</td>
<td class="LineNum">442</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (occurCheck(vl2, (Struct)t)) {</td></tr>
<tr><td class="LineNum">443</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">443</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">444</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">444</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">445</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (!(t instanceof Number)) {</td>
<td class="LineNum">445</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (!(t instanceof Number)) {</td></tr>
<tr><td class="LineNum">446</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td>
<td class="LineNum">446</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</td></tr>
<tr><td class="LineNum">447</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">447</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">448</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = t;</td>
<td class="LineNum">448</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link = t;</td></tr>
<tr><td class="LineNum">449</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</td>
<td class="LineNum">449</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</td></tr>
<tr><td class="LineNum">450</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vl1.add(this);              </td>
<td class="LineNum">450</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vl1.add(this);              </td></tr>
<tr><td class="LineNum">451</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(NullPointerException e) {/* vl1==null mean nothing intresting for the caller */}</td>
<td class="LineNum">451</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(NullPointerException e) {/* vl1==null mean nothing intresting for the caller */}</td></tr>
<tr><td class="LineNum">452</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//System.out.println("VAR "+name+" BOUND to "+link+" - time: "+time+" - mark: "+mark);</td>
<td class="LineNum">452</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//System.out.println("VAR "+name+" BOUND to "+link+" - time: "+time+" - mark: "+mark);</td></tr>
<tr><td class="LineNum">453</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td>
<td class="LineNum">453</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</td></tr>
<tr><td class="LineNum">454</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">454</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">455</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (tt.unify(vl1, vl2, t));</td>
<td class="LineNum">455</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (tt.unify(vl1, vl2, t));</td></tr>
<tr><td class="LineNum">456</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">456</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">457</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">457</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">458</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">458</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">459</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">459</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">460</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">460</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">461</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets a copy of this variable</td>
<td class="LineNum">461</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets a copy of this variable</td></tr>
<tr><td class="LineNum">462</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">462</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">463</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/*    public Term copy(int idExecCtx) {</td>
<td class="LineNum">463</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/*    public Term copy(int idExecCtx) {</td></tr>
<tr><td class="LineNum">464</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td>
<td class="LineNum">464</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td></tr>
<tr><td class="LineNum">465</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tt == this) {</td>
<td class="LineNum">465</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tt == this) {</td></tr>
<tr><td class="LineNum">466</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(idExecCtx &gt; 0 && id &gt; 0) thisCopy++;</td>
<td class="LineNum">466</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(idExecCtx &gt; 0 && id &gt; 0) thisCopy++;</td></tr>
<tr><td class="LineNum">467</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Var(name,idExecCtx,thisCopy,antialias,timestamp);</td>
<td class="LineNum">467</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Var(name,idExecCtx,thisCopy,antialias,timestamp);</td></tr>
<tr><td class="LineNum">468</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">468</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">469</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (tt.copy(idExecCtx));</td>
<td class="LineNum">469</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (tt.copy(idExecCtx));</td></tr>
<tr><td class="LineNum">470</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">470</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">471</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">471</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">472</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">472</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">473</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">473</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">474</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isGreater(Term t) {</td>
<td class="LineNum">474</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isGreater(Term t) {</td></tr>
<tr><td class="LineNum">475</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td>
<td class="LineNum">475</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td></tr>
<tr><td class="LineNum">476</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td>
<td class="LineNum">476</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td></tr>
<tr><td class="LineNum">477</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = t.getTerm();</td>
<td class="LineNum">477</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = t.getTerm();</td></tr>
<tr><td class="LineNum">478</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(t instanceof Var)) return false;</td>
<td class="LineNum">478</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(t instanceof Var)) return false;</td></tr>
<tr><td class="LineNum">479</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return timestamp &gt; ((Var)t).timestamp;</td>
<td class="LineNum">479</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return timestamp &gt; ((Var)t).timestamp;</td></tr>
<tr><td class="LineNum">480</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">480</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">481</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else {</td>
<td class="LineNum">481</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else {</td></tr>
<tr><td class="LineNum">482</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.isGreater(t);</td>
<td class="LineNum">482</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.isGreater(t);</td></tr>
<tr><td class="LineNum">483</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">483</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">484</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">484</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">485</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">485</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">486</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isEqual(Term t) {</td>
<td class="LineNum">486</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public boolean isEqual(Term t) {</td></tr>
<tr><td class="LineNum">487</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td>
<td class="LineNum">487</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td></tr>
<tr><td class="LineNum">488</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tt == this) {</td>
<td class="LineNum">488</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tt == this) {</td></tr>
<tr><td class="LineNum">489</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = t.getTerm();</td>
<td class="LineNum">489</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = t.getTerm();</td></tr>
<tr><td class="LineNum">490</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (t instanceof Var && timestamp == ((Var)t).timestamp);</td>
<td class="LineNum">490</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (t instanceof Var && timestamp == ((Var)t).timestamp);</td></tr>
<tr><td class="LineNum">491</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">491</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">492</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.isEqual(t);</td>
<td class="LineNum">492</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.isEqual(t);</td></tr>
<tr><td class="LineNum">493</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">493</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">494</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">494</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">495</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">495</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">496</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">496</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">497</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the string representation of this variable.</td>
<td class="LineNum">497</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the string representation of this variable.</td></tr>
<tr><td class="LineNum">498</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">498</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">499</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* For bounded variables, the string is &lt;Var Name&gt;/&lt;bound Term&gt;.</td>
<td class="LineNum">499</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* For bounded variables, the string is &lt;Var Name&gt;/&lt;bound Term&gt;.</td></tr>
<tr><td class="LineNum">500</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">500</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">501</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override</td>
<td class="LineNum">501</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override</td></tr>
<tr><td class="LineNum">502</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public String toString() {</td>
<td class="LineNum">502</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public String toString() {</td></tr>
<tr><td class="LineNum">503</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td>
<td class="LineNum">503</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td></tr>
<tr><td class="LineNum">504</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name != null) {</td>
<td class="LineNum">504</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name != null) {</td></tr>
<tr><td class="LineNum">505</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this){</td>
<td class="LineNum">505</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this){</td></tr>
<tr><td class="LineNum">506</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return completeName.toString();</td>
<td class="LineNum">506</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return completeName.toString();</td></tr>
<tr><td class="LineNum">507</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">507</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">508</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (completeName.toString() + " / " + tt.toString());</td>
<td class="LineNum">508</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (completeName.toString() + " / " + tt.toString());</td></tr>
<tr><td class="LineNum">509</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">509</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">510</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">510</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">511</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td>
<td class="LineNum">511</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td></tr>
<tr><td class="LineNum">512</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ANY + hashCode();</td>
<td class="LineNum">512</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ANY + hashCode();</td></tr>
<tr><td class="LineNum">513</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">513</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">514</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.toString();</td>
<td class="LineNum">514</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.toString();</td></tr>
<tr><td class="LineNum">515</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">515</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">516</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">516</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">517</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">517</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">518</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">518</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">519</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td class="LineNum">519</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">520</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td>
<td class="LineNum">520</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">521</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the string representation of this variable, providing</td>
<td class="LineNum">521</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the string representation of this variable, providing</td></tr>
<tr><td class="LineNum">522</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the string representation of the linked term in the case of</td>
<td class="LineNum">522</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the string representation of the linked term in the case of</td></tr>
<tr><td class="LineNum">523</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* bound variable</td>
<td class="LineNum">523</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* bound variable</td></tr>
<tr><td class="LineNum">524</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td>
<td class="LineNum">524</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">525</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td>
<td class="LineNum">525</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">526</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public String toStringFlattened() {</td>
<td class="LineNum">526</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;public String toStringFlattened() {</td></tr>
<tr><td class="LineNum">527</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td>
<td class="LineNum">527</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Term tt = getTerm();</td></tr>
<tr><td class="LineNum">528</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name != null) {</td>
<td class="LineNum">528</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name != null) {</td></tr>
<tr><td class="LineNum">529</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td>
<td class="LineNum">529</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td></tr>
<tr><td class="LineNum">530</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return completeName.toString();</td>
<td class="LineNum">530</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return completeName.toString();</td></tr>
<tr><td class="LineNum">531</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">531</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">532</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.toString();</td>
<td class="LineNum">532</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.toString();</td></tr>
<tr><td class="LineNum">533</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">533</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">534</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">534</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">535</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td>
<td class="LineNum">535</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tt == this) {</td></tr>
<tr><td class="LineNum">536</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ANY + hashCode();</td>
<td class="LineNum">536</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ANY + hashCode();</td></tr>
<tr><td class="LineNum">537</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td>
<td class="LineNum">537</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">538</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.toString();</td>
<td class="LineNum">538</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tt.toString();</td></tr>
<tr><td class="LineNum">539</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">539</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">540</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">540</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">541</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td>
<td class="LineNum">541</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">542</td><td class="Same">&nbsp;</td>
<td class="LineNum">542</td><td class="Same">&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">543</td><td class="Changed"><span class="InSame">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="InDiff">@Override</span></td><td class="LineNum">543</td><td class="Changed"><span class="InSame">&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>
<tr><td class="LineNum">544</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;public void accept(TermVisitor tv) {</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">545</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tv.visit(this);</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">546</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;}   </td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">547</td><td class="Same">}</td>
<td class="LineNum">544</td><td class="Same">}</td></tr>

</table>


</body></html>

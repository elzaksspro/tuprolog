#summary Specification of the new names for the JavaLibrary predicates

= Predicates renaming =
In a future release of tuProlog, there will be naming changes in the predicates of the [http://code.google.com/p/tuprolog/source/browse/2p/trunk/src/alice/tuprolog/lib/JavaLibrary.java JavaLibrary]. 
The purpose of these changes is to obtain a uniform access to the Object Oriented world from the Prolog side independently of the language that is being used (Java, C#, F# and VB.NET). 

The changes are listed below:
|| *Old Name* || *New Name* || *Notes* ||
|| java_object || new_object || ||
|| java_object_bt || new_object_bt || ||
|| java_call || method_call || ||
|| java_array_set || array_set || ||
|| java_array_get || array_get || ||
|| java_array_lenght || array_length || ||
|| java_array_get_primitive || array_get_primitive || ||
|| java_array_set_primitive || array_set_primitive || ||
|| java_catch || java_catch || This predicate is not yet available on the .NET platform ||
|| java_class || new_class || This predicate is not yet available on the .NET platform ||
|| set_classpath || set_classpath|| ||
|| get_classpath || get_classpath|| ||
|| register || register|| ||
|| unregister || unregister|| ||

= Private methods Renaming =
These methods are used internally and are not available for the user on the prolog side.
|| *Old Name* || *New Name* || *Notes* ||
|| java_set/java_get || property_get/property_set || ||
|| java_array || create_array || ||

Note: after the renaming, the old names will be kept for backward compatibility for at least one version of tuProlog.